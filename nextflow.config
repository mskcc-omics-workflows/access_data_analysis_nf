/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    nf-core/accessanalysis Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // TODO nf-core: Specify your pipeline's command line flags
    // Input options
    input                      = "/juno/cmo/bergerlab/guturus1/mskcc-omics-workflows/access_data_analysis_nf_old/assets/inputs/id_mappings_subset.csv"
    // id_mapping_file            = "/juno/cmo/bergerlab/guturus1/mskcc-omics-workflows/access_data_analysis_nf_old/assets/inputs/id_mappings_subset.csv"
    include_samples_file          = "/juno/cmo/bergerlab/guturus1/mskcc-omics-workflows/access_data_analysis_nf_old/assets/inputs/include.csv"
    exclude_samples_file          = "/juno/cmo/bergerlab/guturus1/mskcc-omics-workflows/access_data_analysis_nf_old/assets/inputs/exclude.csv"

    // Regex Patterns
    access_sample_regex_pattern       = ".*-XS.*-standard.*"
    impact_sample_regex_pattern       = ".*(-IM|-IH).*"

    fasta_ref = "/juno/work/access/production/resources/reference/current/Homo_sapiens_assembly19.fasta"
    fasta_index = "/juno/work/access/production/resources/reference/current/Homo_sapiens_assembly19.fasta.fai"

    // FACETS
    facet_path = "/juno/work/ccs/shared/resources/impact/facets/all/"

    base_dirs = [
        research_access : [
            data_dir: "/juno/work/access/production/data",
            bam_dir: "/juno/work/access/production/data/bams/{cmo_patient_id}"
        ],
        clinical_access : [
            mirror_dir : "/juno/dmp/share/access_12_245",
            bam_dir : "/juno/dmp/share/access_12_245/{anon_id_fl}/{anon_id_sl}",
            variant_dir : "/juno/work/access/production/resources/cbioportal/current/msk_solid_heme",
        ],
        clinical_impact : [
            mirror_dir : "/juno/dmp/share/irb12_245",
            bam_dir : "/juno/dmp/share/irb12_245/{anon_id_fl}/{anon_id_sl}",
            variant_dir : "/juno/work/access/production/resources/cbioportal/current/msk_solid_heme"
        ]
    ]

    file_paths = [
        research_access : [
            bam_file_template : [
                simplex  : "${params.base_dirs.research_access.bam_dir}/{cmo_patient_id}/{sample_id}/current/{sample_id}_cl_aln_srt_MD_IR_FX_BR__aln_srt_IR_FX-simplex.bam",
                duplex   : "${params.base_dirs.research_access.bam_dir}/{cmo_patient_id}/{sample_id}/current/{sample_id}_cl_aln_srt_MD_IR_FX_BR__aln_srt_IR_FX-duplex.bam",
                unfilter : "${params.base_dirs.research_access.bam_dir}/{cmo_patient_id}/{sample_id}/current/{sample_id}_cl_aln_srt_MD_IR_FX_BR__aln_srt_IR_FX.bam",
                standard : "${params.base_dirs.research_access.bam_dir}/{cmo_patient_id}/{sample_id}/current/{sample_id}_cl_aln_srt_MD_IR_FX_BR.bam"
            ],
            variant_file_template : [
                mutations : "${params.base_dirs.research_access.data_dir}/small_variants/{cmo_patient_id}/{sample_id}/current/{sample_id}.DONOR22-TP.combined-variants.vep_keptrmv_taggedHotspots_fillout_filtered.maf",
                cna       : "${params.base_dirs.research_access.data_dir}/copy_number_variants/{cmo_patient_id}/{sample_id}/current/{sample_id}_copynumber_segclusp.genes.txt",
                sv        : "${params.base_dirs.research_access.data_dir}/structural_variants/{cmo_patient_id}/{sample_id}/current/{sample_id}_AllAnnotatedSVs.txt",
                msi       : "${params.base_dirs.research_access.data_dir}/microsatellite_instability/{cmo_patient_id}/{sample_id}/current/msi_results.txt"
            ]
        ],
        clinical_access : [
            key: "/juno/dmp/request/ACCESS-12-245/key.txt",
            bam_file_template : [
                simplex  : "${params.base_dirs.clinical_access.bam_dir}/{anon_id}-simplex.bam",
                duplex   : "${params.base_dirs.clinical_access.bam_dir}/{anon_id}-duplex.bam",
                unfilter : "${params.base_dirs.clinical_access.bam_dir}/{anon_id}-unfilter.bam",
                standard : "${params.base_dirs.clinical_access.bam_dir}/{anon_id}-standard.bam"
            ],
            variant_files : [
                mutations : "${params.base_dirs.clinical_access.variant_dir}/data_mutations_extended.txt",
                cna       : "${params.base_dirs.clinical_access.variant_dir}/data_CNA.txt",
                sv        : "${params.base_dirs.clinical_access.variant_dir}/data_sv.txt",
                msi       : "/juno/work/access/production/resources/dmp_msi_admie_scores/current/all_admie_results_from_database.csv"
            ]
        ],
        clinical_impact : [
            key : "/juno/dmp/request/12-245/key.txt",
            bam_file_template : [
                standard : "${params.base_dirs.clinical_impact.bam_dir}/{anon_id}.bam"
            ],
            variant_files : [
                mutations : "${params.base_dirs.clinical_impact.variant_dir}/data_mutations_extended.txt",
                cna       : "${params.base_dirs.clinical_impact.variant_dir}/data_CNA.txt",
                sv        : "${params.base_dirs.clinical_impact.variant_dir}/data_sv.txt",
                msi       : ""
            ]     
        ]
    ]



    // Research BAMs
    //research_duplex_bam        = "/juno/work/access/production/data/bams/{cmo_patient_id}/{cmo_sample_id}/current/{cmo_sample_id}_cl_aln_srt_MD_IR_FX_BR__aln_srt_IR_FX-duplex.bam"
    //research_duplex_bai        = "/juno/work/access/production/data/bams/{cmo_patient_id}/{cmo_sample_id}/current/{cmo_sample_id}_cl_aln_srt_MD_IR_FX_BR__aln_srt_IR_FX-duplex.bai"
    //research_simplex_bam       = "/juno/work/access/production/data/bams/{cmo_patient_id}/{cmo_sample_id}/current/{cmo_sample_id}_cl_aln_srt_MD_IR_FX_BR__aln_srt_IR_FX-simplex.bam"
    //research_simplex_bai       = "/juno/work/access/production/data/bams/{cmo_patient_id}/{cmo_sample_id}/current/{cmo_sample_id}_cl_aln_srt_MD_IR_FX_BR__aln_srt_IR_FX-simplex.bai"

    // Clinical access BAMs
    //clinical_access_duplex_bam = "/juno/dmp/share/access_12_245/{fl}/{sl}/{anon_id}-duplex.bam"
    //clinical_duplex_bai        = "/juno/dmp/share/access_12_245/{fl}/{sl}/{anon_id}-duplex.bai"
    //clinical_simplex_bam       = "/juno/dmp/share/access_12_245/{fl}/{sl}/{anon_id}-simplex.bam"
    //clinical_simplex_bai       = "/juno/dmp/share/access_12_245/{fl}/{sl}/{anon_id}-simplex.bai"

    // Clinical access normal (unfiltered standard)
    //clinical_standard_bam      = "/juno/dmp/share/access_12_245/{fl}/{sl}/{anon_id}-unfilter.bam"
    //clinical_standard_bai      = "/juno/dmp/share/access_12_245/{fl}/{sl}/{anon_id}-unfilter.bai"

    // Clinical impact BAMs
    //impact_standard_bam        = "/juno/dmp/share/irb12_245/{fl}/{sl}/{anon_id}.bam"
    //impact_standard_bai        = "/juno/dmp/share/irb12_245/{fl}/{sl}/{anon_id}.bai"

    // MAF inputs
    //maf_template = "/juno/work/access/production/data/small_variants/{cmo_patient_id}/{cmo_sample_id}/current/{cmo_sample_id}.DONOR22-TP.combined-variants.vep_keptrmv_taggedHotspots_fillout_filtered.maf"
    //dmp_calls_path = "/juno/work/access/production/resources/cbioportal/current/msk_solid_heme/data_mutations_extended.txt"

    // Key Paths
    //dmp_access_key_path              = "/juno/dmp/request/ACCESS-12-245/key.txt"
    //dmp_impact_key_path              = "/juno/dmp/request/12-245/key.txt"
    //research_access_dir_template     = "/juno/work/access/production/data/bams/{cmo_patient_id}/"

    // References
    genome                     = null
    igenomes_base              = 's3://ngi-igenomes/igenomes/'
    igenomes_ignore            = false

    // MultiQC options
    multiqc_config             = null
    multiqc_title              = null
    multiqc_logo               = null
    max_multiqc_email_size     = '25.MB'
    multiqc_methods_description = null

    // Boilerplate options
    outdir                       = "./results/"
    publish_dir_mode             = 'copy'
    email                        = null
    email_on_fail                = null
    plaintext_email              = false
    monochrome_logs              = false
    hook_url                     = null
    help                         = false
    help_full                    = false
    show_hidden                  = false
    version                      = false
    pipelines_testdata_base_path = 'https://raw.githubusercontent.com/nf-core/test-datasets/'
    trace_report_suffix          = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')// Config options
    config_profile_name        = null
    config_profile_description = null

    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_contact     = null
    config_profile_url         = null

    // Schema validation default options
    validate_params            = true
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {
    juno {
        includeConfig './conf/juno.config'
    }
    iris {
        includeConfig './conf/iris.config'
    }
    debug {
        dumpHashes              = true
        process.beforeScript    = 'echo $HOSTNAME'
        cleanup                 = false
        nextflow.enable.configProcessNamesValidation = true
    }
    conda {
        conda.enabled           = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        conda.channels          = ['conda-forge', 'bioconda']
        apptainer.enabled       = false
    }
    mamba {
        conda.enabled           = true
        conda.useMamba          = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    docker {
        docker.enabled          = true
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '-u $(id -u):$(id -g)'
    }
    arm {
        docker.runOptions       = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled     = true
        singularity.autoMounts  = true
        conda.enabled           = false
        docker.enabled          = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    podman {
        podman.enabled          = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    shifter {
        shifter.enabled         = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    charliecloud {
        charliecloud.enabled    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        apptainer.enabled       = false
    }
    apptainer {
        apptainer.enabled       = true
        apptainer.autoMounts    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
    }
    wave {
        apptainer.ociAutoPull   = true
        singularity.ociAutoPull = true
        wave.enabled            = true
        wave.freeze             = true
        wave.strategy           = 'conda,container'
    }
    gitpod {
        executor.name           = 'local'
        executor.cpus           = 4
        executor.memory         = 8.GB
        process {
            resourceLimits = [
                memory: 8.GB,
                cpus  : 4,
                time  : 1.h
            ]
        }
    }
    test      { includeConfig 'conf/test.config'      }
    test_full { includeConfig 'conf/test_full.config' }
}

// Load nf-core custom profiles from different Institutions
includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/nfcore_custom.config" : "/dev/null"

// Load nf-core/accessanalysis custom profiles from different institutions.
// TODO nf-core: Optionally, you can add a pipeline-specific nf-core config at https://github.com/nf-core/configs
// includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/pipeline/accessanalysis.config" : "/dev/null"

// Set default registry for Apptainer, Docker, Podman, Charliecloud and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Charliecloud / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry    = 'quay.io'
docker.registry       = 'quay.io'
podman.registry       = 'quay.io'
singularity.registry  = 'quay.io'
charliecloud.registry = 'quay.io'

// Load igenomes.config if required
includeConfig !params.igenomes_ignore ? 'conf/igenomes.config' : 'conf/igenomes_ignored.config'

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Set bash options
process.shell = """\
bash

set -e # Exit if a tool returns a non-zero status/exit code
set -u # Treat unset variables and parameters as an error
set -o pipefail # Returns the status of the last command to exit with a non-zero status or zero if all successfully execute
set -C # No clobber - prevent output redirection from overwriting files.
"""

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${params.trace_report_suffix}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${params.trace_report_suffix}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${params.trace_report_suffix}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${params.trace_report_suffix}.html"
}

manifest {
    name            = 'nf-core/accessanalysis'
    author          = """@shguturu""" // The author field is deprecated from Nextflow version 24.10.0, use contributors instead
    contributors    = [
        // TODO nf-core: Update the field with the details of the contributors to your pipeline. New with Nextflow version 24.10.0
        [
            name: '@shguturu',
            affiliation: '',
            email: '',
            github: '',
            contribution: [], // List of contribution types ('author', 'maintainer' or 'contributor')
            orcid: ''
        ],
    ]
    homePage        = 'https://github.com/nf-core/accessanalysis'
    description     = """msk access data analysis nextflow pipeline"""
    mainScript      = 'main.nf'
    defaultBranch   = 'master'
    nextflowVersion = '!>=24.04.2'
    version         = '1.0.0dev'
    doi             = ''
}

// Nextflow plugins
plugins {
    id 'nf-schema@2.1.1' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

validation {
    defaultIgnoreParams = ["genomes"]
    monochromeLogs = params.monochrome_logs
    help {
        enabled = true
        command = "nextflow run nf-core/accessanalysis -profile <docker/singularity/.../institute> --input samplesheet.csv --outdir <OUTDIR>"
        fullParameter = "help_full"
        showHiddenParameter = "show_hidden"
        beforeText = """
-\033[2m----------------------------------------------------\033[0m-
                                        \033[0;32m,--.\033[0;30m/\033[0;32m,-.\033[0m
\033[0;34m        ___     __   __   __   ___     \033[0;32m/,-._.--~\'\033[0m
\033[0;34m  |\\ | |__  __ /  ` /  \\ |__) |__         \033[0;33m}  {\033[0m
\033[0;34m  | \\| |       \\__, \\__/ |  \\ |___     \033[0;32m\\`-._,-`-,\033[0m
                                        \033[0;32m`._,._,\'\033[0m
\033[0;35m  nf-core/accessanalysis ${manifest.version}\033[0m
-\033[2m----------------------------------------------------\033[0m-
"""
        afterText = """${manifest.doi ? "\n* The pipeline\n" : ""}${manifest.doi.tokenize(",").collect { "    https://doi.org/${it.trim().replace('https://doi.org/','')}"}.join("\n")}${manifest.doi ? "\n" : ""}
* The nf-core framework
    https://doi.org/10.1038/s41587-020-0439-x

* Software dependencies
    https://github.com/nf-core/accessanalysis/blob/master/CITATIONS.md
"""
    }
    summary {
        beforeText = validation.help.beforeText
        afterText = validation.help.afterText
    }
}
